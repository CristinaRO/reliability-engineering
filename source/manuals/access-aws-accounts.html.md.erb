---
title: Accessing AWS Accounts
account_list:
  - team: 'GOV.UK'
    url: 'https://github.com/alphagov/govuk-aws-data/blob/master/docs/govuk-aws-accounts.md'
  - team: 'Verify'
    url: 'https://github.com/alphagov/verify-blackbox-passwords/blob/master/aws-accounts.info'
  - team: 'Digital Marketplace'
    url: 'https://alphagov.github.io/digitalmarketplace-manual/aws-accounts.html#available-roles'
---

# <%= current_page.data.title %>

GDS manage a number of Amazon Web Services (AWS) accounts.
User accounts are managed centrally in a "base account" from which users
can access the target accounts through a process called "assuming roles".

## Adding new users to GDS' AWS accounts

Currently new joiners have no access to AWS by default. To grant a user access
to AWS they need to be added to the `gds-users` base account. Once a user is in
the base account it is up to the owners of the target accounts to grant the
user access to roles within the account.

To add a user to the `gds-users` base account fill in [this form](https://gds-request-an-aws-account.cloudapps.digital/).

## Accessing the AWS Console

<ul>
  <li>
    Sign in to the GDS base account at:
    <a href="https://gds-users.signin.aws.amazon.com/console">https://gds-users.signin.aws.amazon.com/console</a>
    <details>
      <summary><small>Screenshot of the sign in page</small></summary>
      <img src="/images/aws-base-account-signin-form.png" alt="Screenshot of the sign in page">
    </details>
  </li>
  <li>
    From the menu in the top right, select "Switch Role"
    <details>
      <summary><small>Screenshot of the switch role menu item</small></summary>
      <img src="/images/aws-switch-role-menu.png" alt="Screenshot of the sign in page">
    </details>
  </li>
  <li>
    Fill in the account number and role you're switching to
    <details>
      <summary><small>Screenshot of the switch role page</small></summary>
      <img src="/images/aws-switch-role-form.png" alt="Screenshot of the sign in page">
    </details>
    <details>
      <summary><small>Teams' lists of accounts and roles</small></summary>
      <ul>
        <% for link in current_page.data.account_list %>
          <li><a href="<%= link['url'] %>"><%= link['team'] %></a></li>
        <% end %>
      </ul>
    </details>
  </li>
</ul>

## Accessing AWS from the command line

There are several command line tools which interact with AWS, including:

* [AWS Command Line Interface](https://aws.amazon.com/cli/)
* [AWS Shell](https://github.com/awslabs/aws-shell)
* [Terraform](https://www.terraform.io/)

These need credentials for accessing AWS. The simplest way of managing these credentials
is with an AWS credentials file.

### Creating an AWS credentials file

Create a file at `~/.aws/credentials` and add the following text:

```
[gds-users]
aws_access_key_id = MYACCESSKEYID
aws_secret_access_key = MYSECRETACCESSKEY
```

You can find your access key id and secret access key by logging into the AWS console
to the base account and following [the AWS instructions here](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html#Using_CreateAccessKey).

For each role you need to assume, add a section like the following:

```
[your-account-name]
source_profile = gds-users
region = eu-west-1
role_arn = <role arn>
mfa_serial = <mfa device arn>
```

Where `<role arn>` is taken from your Team's list of accounts and roles...

<details>
  <summary><small>Teams' lists of accounts and roles</small></summary>
  <ul>
    <% for link in current_page.data.account_list %>
      <li><a href="<%= link['url'] %>"><%= link['team'] %></a></li>
    <% end %>
  </ul>
</details>

... and `<mfa device arn>` is your user's assigned MFA device.

<details>
  <summary><small>How to find your MFA device ARN</small></summary>
  <li>Sign in to the base account in the console</li>
  <li>Navigate to `IAM` > `Users` > `$your-user`</li>
  <li>Select the `Security credentials` tab</li>
  <li>Look for the `Assigned MFA device`</li>
  </ul>
</details>

### Creating tokens for command line use

Some tools (e.g. [Terraform](https://www.terraform.io/)) aren't able to interactively
ask the user for an MFA token. To work with these tools you can create a token using
[STS](https://docs.aws.amazon.com/STS/latest/APIReference/Welcome.html).

Using [`awscli`](https://aws.amazon.com/cli/), run:

```
aws sts assume-role \
  --role-session-name "$(whoami)-$(date +%d-%m-%y_%H-%M)" \
  --role-arn <role arn> \
  --serial-number <mfa device arn> \
  --duration-seconds "$((8*60*60))" \
  --token-code <mfa token>
```

See [the AWS CLI documentation](https://docs.aws.amazon.com/cli/latest/reference/sts/assume-role.html) on assume-role for details.

Where `<role arn>` and `<mfa device arn>` are the values you set in `~/.aws/credentials`
(see [Creating an AWS credentials file](#creating-an-aws-credentials-file))
and `<mfa token>` is the current token being shown by your MFA device.

This will return some JSON which includes some keys and tokens. Use the output
to set the following environment variables:

```
export AWS_ACCESS_KEY_ID=... # Credentials.AccessKeyId
export AWS_SECRET_ACCESS_KEY=... # Credentials.SecretAccessKey
export AWS_SESSION_TOKEN=... # Credentials.SessionToken
```

Tools like Terraform will use these environment variables instead of the
credentials file.

Note that the SessionToken will expire after 8 hours (or whatever time you
supply in <nobr>`--duration-seconds`</nobr>).
